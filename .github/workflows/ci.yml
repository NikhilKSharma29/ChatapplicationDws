name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-build-test:
    name: Lint, Build & Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check code formatting
      run: npm run format -- --check
    
    - name: Run linter
      run: npm run lint:check
    
    - name: Run tests
      run: npm test -- --ci --coverage
      
    - name: Build application
      run: npm run build
      env:
        NEXT_TELEMETRY_DISABLED: 1
  
  docker-build:
    name: Build Docker Image
    needs: lint-build-test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false
        tags: chat-app:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    # Only push to registry on main/develop branches
    - name: Login to Docker Hub
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push to Docker Hub
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/chat-app:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/chat-app:${{ github.sha }}
